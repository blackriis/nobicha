-- üö® ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç RLS Policies ‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
-- ‡∏£‡∏±‡∏ô‡πÉ‡∏ô Supabase Console > SQL Editor ‡∏ó‡∏µ‡∏•‡∏∞‡∏ö‡∏•‡πá‡∏≠‡∏Å

-- ===== ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô =====
-- ‡∏î‡∏π policies ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
SELECT 
  policyname,
  cmd,
  permissive,
  roles,
  qual,
  with_check
FROM pg_policies 
WHERE schemaname = 'storage' 
  AND tablename = 'objects'
  AND policyname ILIKE '%selfies%'
ORDER BY policyname;

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö RLS status
SELECT 
  schemaname, 
  tablename, 
  rowsecurity 
FROM pg_tables 
WHERE schemaname = 'storage' AND tablename = 'objects';

-- ===== ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏•‡∏ö policies ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î =====
-- ‡∏£‡∏±‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏•‡∏ö‡∏´‡∏°‡∏î
DROP POLICY IF EXISTS "Users can upload own selfies" ON storage.objects;
DROP POLICY IF EXISTS "Users can view own selfies" ON storage.objects;
DROP POLICY IF EXISTS "Users can update own selfies" ON storage.objects;
DROP POLICY IF EXISTS "Users can delete own selfies" ON storage.objects;
DROP POLICY IF EXISTS "Admins can view all selfies" ON storage.objects;
DROP POLICY IF EXISTS "Admins can manage all selfies" ON storage.objects;
DROP POLICY IF EXISTS "Employee upload selfies" ON storage.objects;
DROP POLICY IF EXISTS "Employee view own selfies" ON storage.objects;
DROP POLICY IF EXISTS "Secure employee upload" ON storage.objects;
DROP POLICY IF EXISTS "Secure employee download" ON storage.objects;
DROP POLICY IF EXISTS "Secure employee update" ON storage.objects;
DROP POLICY IF EXISTS "Secure employee delete" ON storage.objects;

-- ===== ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏•‡∏ö‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß =====
SELECT 
  policyname
FROM pg_policies 
WHERE schemaname = 'storage' 
  AND tablename = 'objects'
  AND policyname ILIKE '%selfies%';
-- ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô: (0 rows)

-- ===== ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡πÄ‡∏õ‡∏¥‡∏î RLS =====
ALTER TABLE storage.objects ENABLE ROW LEVEL SECURITY;

-- ===== ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏™‡∏£‡πâ‡∏≤‡∏á policies ‡πÉ‡∏´‡∏°‡πà (‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢) =====
-- Policy ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö INSERT - ‡πÉ‡∏ä‡πâ string matching ‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
CREATE POLICY "employee_selfie_upload" ON storage.objects
FOR INSERT 
TO authenticated
WITH CHECK (
  bucket_id = 'employee-selfies' 
  AND auth.uid() IS NOT NULL
  AND (
    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö path ‡∏ß‡πà‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ checkin/{user_id}/ ‡∏´‡∏£‡∏∑‡∏≠ checkout/{user_id}/
    name LIKE 'checkin/' || auth.uid()::text || '/%'
    OR 
    name LIKE 'checkout/' || auth.uid()::text || '/%'
  )
);

-- Policy ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SELECT (‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î)
CREATE POLICY "employee_selfie_select" ON storage.objects
FOR SELECT 
TO authenticated
USING (
  bucket_id = 'employee-selfies' 
  AND auth.uid() IS NOT NULL
  AND (
    name LIKE 'checkin/' || auth.uid()::text || '/%'
    OR 
    name LIKE 'checkout/' || auth.uid()::text || '/%'
  )
);

-- Policy ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UPDATE
CREATE POLICY "employee_selfie_update" ON storage.objects
FOR UPDATE 
TO authenticated
USING (
  bucket_id = 'employee-selfies' 
  AND auth.uid() IS NOT NULL
  AND (
    name LIKE 'checkin/' || auth.uid()::text || '/%'
    OR 
    name LIKE 'checkout/' || auth.uid()::text || '/%'
  )
);

-- Policy ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö DELETE
CREATE POLICY "employee_selfie_delete" ON storage.objects
FOR DELETE 
TO authenticated
USING (
  bucket_id = 'employee-selfies' 
  AND auth.uid() IS NOT NULL
  AND (
    name LIKE 'checkin/' || auth.uid()::text || '/%'
    OR 
    name LIKE 'checkout/' || auth.uid()::text || '/%'
  )
);

-- ===== ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 6: ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤ policies ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á =====
SELECT 
  policyname,
  cmd,
  permissive
FROM pg_policies 
WHERE schemaname = 'storage' 
  AND tablename = 'objects'
  AND policyname LIKE 'employee_selfie_%'
ORDER BY policyname;
-- ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏´‡πá‡∏ô 4 policies: upload, select, update, delete

-- ===== ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 7: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö logic =====
-- ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ policy condition ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
-- ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà USER_ID_HERE ‡∏î‡πâ‡∏ß‡∏¢ UUID ‡∏Ç‡∏≠‡∏á user ‡∏à‡∏£‡∏¥‡∏á
DO $$ 
DECLARE 
    test_user_id TEXT := '585572b8-4552-4de9-8bb0-00aba3273fc0'; -- employee.som@test.com
    test_result BOOLEAN;
BEGIN
    -- Test 1: Valid path (should be true)
    SELECT ('checkin/' || test_user_id || '/test.jpg') LIKE ('checkin/' || test_user_id || '/%') INTO test_result;
    RAISE NOTICE 'Test 1 - Valid own path: %', test_result;
    
    -- Test 2: Invalid path (should be false)  
    SELECT ('checkin/00000000-0000-0000-0000-000000000002/test.jpg') LIKE ('checkin/' || test_user_id || '/%') INTO test_result;
    RAISE NOTICE 'Test 2 - Invalid other path: %', test_result;
    
    -- Test 3: Checkout path (should be true)
    SELECT ('checkout/' || test_user_id || '/test.jpg') LIKE ('checkout/' || test_user_id || '/%') INTO test_result;
    RAISE NOTICE 'Test 3 - Valid checkout path: %', test_result;
END $$;